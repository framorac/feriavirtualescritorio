<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAbwAAAF+CAYAAAD5kK9gAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAAABl0RVh0U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAABkFSURBVHhe7d3r
        mRxFtoVhmYAHkgfCA7BAHAuEBWgcQMMxgAYM6AEHBDggLgYMYhxA4wGYwFlbqj4kpVVdlZWXiNj7W8/z
        /tlc1F3KjKiqyNjx4M8//wQAID1bBAAgG1sEACAbWwQAIBtbBAAgG1sEACAbWwQAIBtbBAAgG1sEACAb
        WwQAIBtbBAAgG1sEACAbWwQAIBtbBAAgG1sEACAbWwRGpnwQ3D8DUJctAqNQHsuX8pNEwYl/Fv/OY/f/
        AFCDLQK9U57KrzKd2C7xo/DpDyjIFoGeKf88TF5LxMTHJz6gEFsEeqQ8kd9lOnEtdSPvuT8PQC62CPRG
        ia8wpxPVmmISfeb+XAB52CLQEyWeupxOUFt5LazvAUnZItAL5T1Z+2vMc2J976H7eQCMyxaBXigvDpNQ
        C/FwDOt7QBK2CPRA2eurzPvEp8un7ucDMBZbBHqg3B4mnR78IqzvAQOzRaA15dFhounN18L6HjAgWwRa
        U7bchrBUfM3J+h4wGFsEWlN6+jrzlNjGwPoeMAhbBFpTfjtMKiOgTRkwAFsEWptMJiOJ9T2+5gQ6ZYtA
        a5NJZDRv1vfc7wSgLVsEWptMIKOK9b0n7ncD0IYtAq0pfxwmjtHRpgzohC0CrSkvDxNGFhxDBDRmi0Br
        yueHiSITjiECGrJFoDXlo8MkkRFtyoAGbBHogRIPfkwnimy+E9b3gJ3YItAD5flhYsiONmXADmwR6EFM
        ApLlac1zOIYI2JgtAr2ISeAwIVQR2xhY3wM2YItAT5RvD5NBJRxDBKzMFoGeKPHV5iuZTggVcAwRsCJb
        BHoTg75UnPQCbcqAFdgi0CMlJr0vZDoZVMIxRMACtgj0THkiVZ7edDiGCLiCLQK9iwFfPpPpRFAJxxAB
        M9kiMArloXwv08mgkljfYxsDcAFbBEYTg75UfaglcAwRcIYtAqNS/iGV1/c4hgg4wRaBkcWAL5Wf5qRN
        GWDYIpCBEut7P8l0MqiEY4iACVsEMlFiG8N/ZToZVMIxRIDYIpCREtsYKq/v0aYMpdkikFUM+PKNTCeC
        SmIbA+t7KMkWgeyUx1J5fY9jiFCOLQJVKB9L5fU9jiFCGbYIVKLctSmrur5HmzKUYItARUpsY6i+vscx
        REjLFoGWlPjE1ewYHIU2ZRxDhIRsEWhJuT0MvE2PwVFifY9jiMxrA4zIFoFWlHh6cjroNl1fUjiG6MGD
        Z+61AUZji0ArysvDQHus6fqSUr1NGccQYXi2CLSgRAuw6SDrND0GR4n1vcrbGDiGCMOyRaAF5bfDoHqJ
        psfgKNWPIaJNGYZji8DelOeHgXSOputLCscQ0aYMA7FFYE/Ko8PgOR1M52i6vqRUb1PGMUQYgi0Ce1Lu
        tiEs1fQYHIVjiFjfQ8dsEdiLEg+BTAfNNTRdX1LKtykT1vfQHVsE9qKc2oawVNP1JYVjiFjfQ2dsEdhD
        DIiHwXFLTY/BiT9bOIbIvDbA3mwR2JoSn4DmbENYqukxOArHEPE1JxqzRWBryjXbEJZqur4Uf65wDJF5
        bYA92CKwJSW2IUwHwr310Kbsezn+uapo+vqjLlsEtqS8OAx8rTU9BkepfgxRbGPga07sxhaBrShbbENY
        imOI2olPe5y9h13YIrAVJbpyTAe8XjRdX1IqtymL155JD5uzRWALyrPDANez1m3Kqh5DxKSHzdkisDYl
        PsHEoDYd5HrGMUT7i20qrOlhM7YIrE2J43ymg9soOIZoX8/d6wCswRaBNSmttyEsFZ9MWx9DVKlN2SP3
        OgBL2SKwJmWrfpl7a3oMjlLlGKJb9/sDS9kisBalx20IS3EM0bZ+d783sJQtAmtR9uyXuTeOIdoOJy1g
        dbYIrEFp0S9zb02PwVFiG0PG9b1P3e8LLGGLwFLKaNsQluIYonW9dL8nsIQtAkspt5PBqxKOIVrHb+73
        A5awRWAJJZ4mnA5e1cQn29ZtymJ97/jnGsrx7wUsZYvAEkqWbQhLcQzR9fhKE6uzReBaSjwyPx24wDFE
        12DCw+psEbiGEl+lZd6GsFTrY4hGalP2wv0OwBK2CFxDqbANYake2pSNcAzRJ+7nB5awRWAuJfplVtqG
        sBTHEN3vffdzA0vYIjCXUnUbwlIcQ/Su1+5nBZayRWAOJWO/zL3RpuwvtBXDJmwRmEOJUwSmAxauE18J
        t2xT1sMxRHy6w2ZsEbiU8nQyWGEdlY8harZvEfnZInAJpVq/zL1VO4boa/dzAGuxReASCtsQtvemTZk0
        Wd+LP1f2WN975f58YE22CJyjxDaE6YCFbWU+hii6wDR7YAd12CJwjvLiMFhhXz0cQ7Rmm7Iv3J8DbMEW
        gfsobENor3WbsqXHEMV/22ziRk22CNxHoV9mH96s77m/o70oMfH9R45/tlPi3/3Y/b+ArdkicIry7DBw
        oR9NjyEKSqzxxeT3lfx8JGrxz5o9cQoEWwQchW0IfWt6DBHQO1sEHOXmMLCib/H3xFOPwBFbBI4pbEMY
        S3wSb3YMEdAjWwSOKS8PAynG0vQYIqAntghMKdFiajqIYjxN25QBPbBFYEphG0IeTY8hAlqyReCOQr/M
        fGJ9jzPnUI4tAkFhG0JuTY8hAvZmi0BQbg8DI3KLNmWs7yE9WwSUOAR0OigitzdtyoT1PaRli4DCNoSa
        mh5DBGzJFlFbDHiHwQ91feeuDWBktoi6lHhQhW0I4FMe0rFF1KWwDQGv3LUBjM4WUZMS/TLZhgC2KiAl
        W0RNyovJoIeavnXXBpCBLaIe5YPJoIea/pBH7voAMrBF1KNE143p4Id6nrtrA8jCFlGLwjYExP47Np0j
        NVtEHTHICQ+qgG0ISM8WUYfCNgT84K4NIBtbRA1KbEOYDnyoiW0IKMEWUYNCv0zcumsDyMgWkZ/CNgTE
        NgQeVEEZtoj8FPplgm0IKMUWkZvybDLooabX7toAMrNF5KWwDQHhibs+gMxsEXkpN5NBDzWxDQEl2SJy
        Uh5PBj3U9dhdH0B2toicFLYh4MZdG0AFtoh8lCeTQQ81sQ0Bpdki8lHYhoBn7toAqrBF5KLQLxNsQ0B5
        tog8lOiXyTYE0C8T5dki8lBuJ4MeavrWXRtANbaIHBT6ZSI8ctcHUI0tIgeFbQigXyZwYIsYn/J0Muih
        JrYhABO2iLHFICdsQ8BTd30AVdkixqawDQGv3LUBVGaLGJcS2xCmAx9qYhsCcMQWMS7lxWTQQ0237toA
        qrNFjElhGwLiQRW2IQCGLWJMyi+HQQ91sQ0BOMEWMR6FbQh4LWxDAE6wRYwlBjmhXybYhgDcwxYxFuVm
        Muihrq+FT3jACbaIcShsQ8BUfNL/pzDxAUdsEeNQ6JcJh4kPOGKLGIPCNgScExMfJ50DYosYg0K/TFwq
        nuDkoRaUZovon/LsMJABczDxoSxbRP+U7w4DGHCNH4V+myjFFjEG5WOJVlLTgQyYg4kPZdgixqHEpvPP
        ZDqIAXPFxPfYXWNAFraI8SgP5XuZDmLAXLF5/aG7xoDR2SLGpcRWhVcyHcSAuZj4kI4tYnzKP4T1PSzF
        5nWkYYvIIQYq+UKmAxgwF11bkIItIhcl1vd+kukgBsz1ZuJz1xgwAltETkqs7/1XpoMYMBeb1zEkW0Ru
        SmxjYH0PSzHxYSi2iPyUWN/7RqYDGHCNmPjYvI7u2SLqUB4L63tYA11b0DVbxLqUeGjkqXwpMblMRS3+
        WdM9T0q0KWN9D2tg4kOXbBHrUGIi+1Wmg8F94t9ttiai3LUpY30Pa2DzOrpii1hGeSKxrjG9+eeI//aJ
        +3/vQYlPpKzvYS1MfOiCLeI6SnxCWvPYnqYNfRXalGFNMfGxeR3N2CLmixtZfpHpDb6WG2k2UCgcQ4S1
        0LUFzdgi5ombV7aa7O7EQPHM/fl7UO7W945/LuAaTHzYnS1iHuWlTG/mLTXd86RwDBHWFBMfm9exC1vE
        5ZRnhxt3b7G+1+xBAIU2ZVgTXVuwOVvEZZT4mi/eoU5v3L01/VpI4RgirImJD5uxRVxGeX64SVtr+rWQ
        EhM/xxBhTWxex+psEZdRfjvcnL2IB2dar+/Rpuw6txJt3tgG8ndMfFiNLeI85aPDDdmj2AvYcn0vNt6z
        vne5+Er4/7+WVuh2866ma9bIwRZxnvLp4UbsVfPHvhUG7su8s91E4dOyR9cWXM0WcZ6y51aEJZo+BKDE
        +h5tyk577V63O0p8WuZNw7uY+DCbLeK8yY03iqZrIfFnC59Y3nX270ThTYPH5nXMYos473DDjahpP0OF
        Y4j+8oN7jU5R2PvoMfHhIraI8w432qjeDBDu99qDctemrPpXdY/c63OOQos3r+l1jf7ZIs6b3GQj6+EY
        oqptym7ca3IphZPqT2PzOixbxHnKKA+tXKKHNmWV9p/9bRvCEgqdbk5j4sPf2CLOU2Kj8PTmyoBjiPax
        6iCsxFfENPQ+rWlDBvTDFnGe8snhZsom1kE4hmg7r9zvvQaFDf/3o2tLcbaI85QYmKc3UzbxdVDLbQxZ
        N15v+poqcV3S1/R+THxF2SIuo7w43ECZtW5TlulR/G/d77gFhb6c57F5vRhbxGWUGIynN1BmHEO03FXb
        EJZQ2P5xHhNfEbaIyykZH145Jdb3OIboOs/d77QHhb6cl2n60Ba2Z4u4XNwgUu0ddOtjiEbbgxbroc0H
        UoW+nOfRtSUxW8Q8SgzAFQeSpl8FKaM8ldjNXjAl3qDRl/M8Jr6EbBHzKU9lesNU0XxgUHpep5rVL3Mv
        Cn05L8Pm9URsEddRKn9lFAND6zZlPX5y6frxd4W+nJdh4kvAFnE9Jb4yqvyAQOxxeuxemz0o8cmll9f/
        1v2MvVHoy3m5pm/ssIwtYjmlSpusU6ofQxR/90Ot/yj05bwcm9cHZItYhxKf9ip/ZfRmfc+9NntQWr7+
        zbYhLKHEa0Zfzssx8Q3EFrEupfIxOCG+Bmq5jWHv1/+1+zlGotCXc56mHYlwGVvENpRqx+Aci3fDrduU
        7fH6p1jjUeLTHn0556FrS8dsEdtSqq+VZD6GqMttCEso9OWcj4mvQ7aI7SnV3z3H+l7rY4i2eP2bPaG6
        NYW+nPOweb0ztoj9KNX7HLZuU7bm63/j/oxMlOrX6zWY+Dphi9ifUr3zxejHEA23DWEJhb6c8zX9VgP6
        K3BFtKNU/9po1DZl5QYyJb4Wpi/nfHRtacQW0ZZSfSCJd8KtjyGa8/oPvw1hCaX6txPXYuLbmS2iD0r1
        lk9NN/Uql77+5TceK/EmoXKThSWarmNXYovoi9K6TVZrPR9DlG4bwhIKfTmvR9eWjdki+qPcvYOuur73
        5kk399rsQTn1+j9y/351Cn05rxcTX9rtLS3ZIvqlxGPhldf3mnarV6av/5D9MvdyeK3oy3k9Nq+vzBbR
        P4U2ZQ3fBSvx+rOv6gIKfTmXYeJbiS1iHArHEDHxdC/+joS+nMuweX0hW8RY4iaQyk/IsaF3EEr1byaW
        omvLAraIMSnV10yaHkOEyymVH8BaAxPfFWwRY1OqbwRuegwRLhN/R8IWhmXYvD6DLSIHhWOIeAfcPaX6
        OvQamPguYIvIQ6n+sEDTNmW4jBLXKX05l+Nr/XvYIvJRqn99RPumAcTfkbCFYTm6thi2iLyU6nuimh5D
        hPOU6k8dr4mJb8IWkZ9S/Sk5nnDrnEJfzvXwRk9sETUo1ddNWOgfgEJfzvWU7tpii6hFiXWTyu+k+dqn
        cwp9OddVskORLaImhWOI+Jqzawp9OddTbvO6LaKuuPil8vrem0HAvTbog1J9q83aykx8tggotCnja86u
        xd+P0JdzPTHxpe5Ja4vAHaX6oMKnvc4p9OVcV9qHuWwROKZUbv8Um9ZZ2+uYQl/O9aWb+GwRcJTKG4Jf
        uNcEfVHoy7m+NE8x2yJwH6Xqu+l/udcDfVGq7y/dyvATny0Cl4iLX6o9Is6DLIOIvythC8P6YuIbcvO6
        LQJzKJU6YfzmXgP0San8NfzWhuvaYovAXEqlr5E+ca8B+qVEX062MGxjmInPFoFrKRUa/v7b/e7on0Jf
        zu10v3ndFoGllOwtoN53vzf6p9CXcztdd22xRWAtStZNwZ+63xfjUOJNGZ/2ttFliz5bBNakxDvqbOt7
        t+53xVgU+nJuq6vN67YIbEHJdAzRS/c7YkwKfTm31cXEZ4vAlpQUxxAd/14Yn8IWhm01bcpui8DWlNH3
        R/EJLymFvpzba9K1xRaBvSijPjHHhJecQl/O7e068dkisLe46GWkNRQmvAKU+CaCLQzb22Xzui0CrSij
        vKtmW0IhCn0593Ejm+3hs0WgpbjgpfdHxT9yPzvyUkZfdx7FZg+22CLQA6XXhwfiEygHwhal0JdzH8/c
        67+ELQI9UXr7Oulz93OiFoW+nNtb9QxKWwR6pPTSpuyR+/lQj0Jfzu2tNunZItArJdZRWrYpu3E/F2pT
        6Mu5refudZ/LFoHeKS2OIYrFdNbuYMW1IfTl3M4T97rPYYvAKOImkD3W9+Ld+2P3MwBTCn05txEnMCx6
        w2mLwEjiJpAt1/fi/7v43SVqUdjCsL4X7rW+lC0CI1K2OIaIT3a4mkJfzvVdvUfPFoGRxQ0hawwy8fQd
        a3ZYTKEv53qubutni0AGyrXHEMVk2ewIE+SkxFfvbGFYx/vuNT7HFoFMlHii8yv5WaY3zVT8s/h3+PoS
        m1Loy7ncrXttz7FFIDMl3ml/eMBXltjd4RrkoZbr/e5e13NsEQCwPYW+nNeb3cDdFgEA+1Hoyznf7CO6
        bBEAsC+FvpzzzH5a0xYBAG0o9OW8zOx1PFsEALSj0JfzAsev2zm2CABoT2ELw/1m7cezRQBAPxS2MHgf
        utfrFFsEAPRFoS/nu5jwACArhS0Mf5nVOMIWAQD9ioFeym9hOH5dzrFFAED/lMoPtfzhXpP72CIAYAxK
        1S0MbDwHgIqUan05P3evw31sEQAwJqXKQy2zntAMtggAGJeSfQvD7PW7YIsAgPEpWftycgAsAODvlIwP
        tcxqKXbHFgEAuShZtjD84H6/S9giACAnZfS+nB+43+sStggAyEsZ9aGWb93vcylbBADkp4y0hSF+zlm9
        M4/ZIgCghphEZIS+nFd/lXnHFgEAtcSEIr0+1PLU/cxz2SIAoB6lxy0MX7uf9Rq2CACoS+mlL+cr9/Nd
        yxYBAFBaPtTytSx6SOWYLQIAEJS9tzDEOuL/uJ9lKVsEAGBKib6cWz/UEuuHq36qm7JFAAAc5WNZe+L7
        Rh66P29NtggAwH2UmPiW7N/7j8Qa4eYT3R1bBADgEkpsZfhQ/ldiAvxZjh90ickt6l9JTJS7TXJTtggA
        QDa2CABANrYIAEA2tggAQDa2CABANrYIAEA2tggAQDa2CABANrYIAEA2tggAQDa2CABANrYIAEA2tggA
        QDa2CABANrYIAEA2tggAQDa2CABANrYIAEA2tggAQDa2CABANraIyygP5Zl8Jz/J7xL/AFgirqO4nkJc
        Xw/d9QdgHlvE/ZQn8qtMBylgS3G9PXXXI4DL2CI85bH8KNOBCNhTXH8fuOsTwP1sEe9Snh4GHKAHfNoD
        ZrJF/J1yMxlogF78y12vADxbxF+UeGhgOsgAPXnurlsA77JFvKXEwynTwQXoEV9vAhewRcQY8uA9YZsB
        RhDX6XvuOgbwF1tEjCEPnh8GE2AEN+46BvAXW6xOeSR8usNoHrnrGcBbtlid8slkEAFG8Ym7ngG8ZYvV
        KS8ngwgwin+76xnAW7ZYmRIPq0wHEWAkfK0JnGCLlSkfTgYPYDQfuusagG4PV6wsBozJ4AGMhj15wAm2
        WJny6WTwAEbzqbuuAej2cMXKYsCYDB7AaJjwgBNssbIYMCaDBzAaJjzgBFusLAaMyeABjIYJDzjBFiuL
        AWMyeACjYcIDTrDFymLAmAwewGg+d9c1AN0erliZwoSHkb101zUA3R6uWJnChIeRMeEBJ9hiZQoTHkbG
        hAecYIuVKUx4GBkTHnCCLVamMOFhZL+76xqAbg9XrExhwsPQjq9pAG/ZYmUKEx6GdnxNA3jLFitTmPAw
        uvfdtQ1UZ4uVKUx4GB1n4gGGLVamMOFhdB+5axuozhZHpnxwoYcn/nsmPIyOfpqAYYsjO7rxgepey0/G
        l/KZ8ZG85+4tYHS2ODJlerMDmI81QKRkiyM7unEBzMeEh5RscWTKH5MbF8B8bGtASrY4MuXl5MYFMNPx
        PQVkYYsjU5jwgAWO7ykgC1scmcKEByxwfE8BWdjiyBQmPGCB43sKyMIWR6Yw4QHX+8PdV0AGtjgyhQkP
        uB4HyCItWxxZ3LCTmxfAPEx4SMsWR6Z8Prl5AczDhIe0bHFkCs2fgesx4SEtWxyZwoQHXI8JD2nZ4sgU
        JjzgehwthLRscWRxw05uXgDzMOEhLVsEACAbWwQAIBtbBAAgG1sEACAbWwQAIBtbBAAgG1sEACAbWwQA
        IBtbBAAgG1sEACAbWwQAIBtbBAAgG1sEACAbWwQAIBtbBAAgG1sEACAbWwQAIBtbBAAgG1sEACAbWwQA
        IBtbBAAgG1sEACAbWwQAIBtbBAAgG1sEACAbWwQAIJc/H/wf7+1ozNsVhQ8AAAAASUVORK5CYII=
</value>
  </data>
</root>